<Window x:Class="YouTubCRUD.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Student CRUD App" Height="450" Width="800">
    <Grid Margin="10">
        <Label Content="CRUD Operation in C#" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" FontSize="16" FontWeight="Bold"/>
        
        <Label Content="Name:" HorizontalAlignment="Left" Margin="10,50,0,0" VerticalAlignment="Top"/>
        <TextBox x:Name="name_txt" HorizontalAlignment="Left" Height="25" Margin="80,50,0,0" VerticalAlignment="Top" Width="180"/>
        
        <Label Content="Age:" HorizontalAlignment="Left" Margin="10,85,0,0" VerticalAlignment="Top"/>
        <TextBox x:Name="age_txt" HorizontalAlignment="Left" Height="25" Margin="80,85,0,0" VerticalAlignment="Top" Width="180"/>
        
        <Label Content="Gender:" HorizontalAlignment="Left" Margin="10,120,0,0" VerticalAlignment="Top"/>
        <TextBox x:Name="gender_txt" HorizontalAlignment="Left" Height="25" Margin="80,120,0,0" VerticalAlignment="Top" Width="180"/>
        
        <Label Content="City:" HorizontalAlignment="Left" Margin="10,155,0,0" VerticalAlignment="Top"/>
        <TextBox x:Name="city_txt" HorizontalAlignment="Left" Height="25" Margin="80,155,0,0" VerticalAlignment="Top" Width="180"/>
        
        <Label Content="Search by ID:" HorizontalAlignment="Left" Margin="10,200,0,0" VerticalAlignment="Top"/>
        <TextBox x:Name="search_txt" HorizontalAlignment="Left" Height="25" Margin="110,200,0,0" VerticalAlignment="Top" Width="150"/>

        <Button x:Name="InsertBtn" Content="Insert" HorizontalAlignment="Left" Margin="10,240,0,0" VerticalAlignment="Top" Width="80" Click="InsertBtn_Click"/>
        <Button x:Name="UpdateBtn" Content="Update" HorizontalAlignment="Left" Margin="110,240,0,0" VerticalAlignment="Top" Width="80" Click="UpdateBtn_Click"/>
        <Button x:Name="DeleteBtn" Content="Delete" HorizontalAlignment="Left" Margin="210,240,0,0" VerticalAlignment="Top" Width="80" Click="DeleteBtn_Click"/>
        <Button x:Name="ClearDataBtn" Content="Clear" HorizontalAlignment="Left" Margin="310,240,0,0" VerticalAlignment="Top" Width="80" Click="ClearDataBtn_Click"/>

        <DataGrid x:Name="datagrid" Margin="400,50,10,10" AutoGenerateColumns="True" IsReadOnly="True" />
    </Grid>
</Window>




using System;
using System.Data;
using System.Data.SqlClient;
using System.Windows;

namespace YouTubCRUD
{
    public partial class MainWindow : Window
    {
        // Update your connection string accordingly:
        private readonly string connectionString = "Data Source=YOUR_SERVER;Initial Catalog=YOUR_DATABASE;Integrated Security=True";
        SqlConnection con;

        public MainWindow()
        {
            InitializeComponent();
            con = new SqlConnection(connectionString);
            LoadGrid();
        }

        private void LoadGrid()
        {
            try
            {
                SqlCommand cmd = new SqlCommand("SELECT * FROM firsttable", con);
                SqlDataAdapter adapter = new SqlDataAdapter(cmd);
                DataTable dt = new DataTable();
                adapter.Fill(dt);
                datagrid.ItemsSource = dt.DefaultView;
            }
            catch (Exception ex)
            {
                MessageBox.Show("Error loading data: " + ex.Message);
            }
        }

        private void InsertBtn_Click(object sender, RoutedEventArgs e)
        {
            if (string.IsNullOrWhiteSpace(name_txt.Text))
            {
                MessageBox.Show("Name is required!");
                return;
            }

            try
            {
                SqlCommand cmd = new SqlCommand("INSERT INTO firsttable (Name, Age, Gender, City) VALUES (@Name, @Age, @Gender, @City)", con);
                cmd.Parameters.AddWithValue("@Name", name_txt.Text);
                cmd.Parameters.AddWithValue("@Age", age_txt.Text);
                cmd.Parameters.AddWithValue("@Gender", gender_txt.Text);
                cmd.Parameters.AddWithValue("@City", city_txt.Text);

                con.Open();
                int result = cmd.ExecuteNonQuery();
                con.Close();

                if (result > 0)
                {
                    MessageBox.Show("Record inserted successfully.");
                    ClearInputs();
                    LoadGrid();
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show("Insert error: " + ex.Message);
            }
        }

        private void UpdateBtn_Click(object sender, RoutedEventArgs e)
        {
            if (string.IsNullOrWhiteSpace(search_txt.Text))
            {
                MessageBox.Show("Enter ID to update.");
                return;
            }

            try
            {
                SqlCommand cmd = new SqlCommand("UPDATE firsttable SET Name=@Name, Age=@Age, Gender=@Gender, City=@City WHERE ID=@ID", con);
                cmd.Parameters.AddWithValue("@ID", search_txt.Text);
                cmd.Parameters.AddWithValue("@Name", name_txt.Text);
                cmd.Parameters.AddWithValue("@Age", age_txt.Text);
                cmd.Parameters.AddWithValue("@Gender", gender_txt.Text);
                cmd.Parameters.AddWithValue("@City", city_txt.Text);

                con.Open();
                int result = cmd.ExecuteNonQuery();
                con.Close();

                if (result > 0)
                {
                    MessageBox.Show("Record updated successfully.");
                    ClearInputs();
                    LoadGrid();
                }
                else
                {
                    MessageBox.Show("No record found with given ID.");
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show("Update error: " + ex.Message);
            }
        }

        private void DeleteBtn_Click(object sender, RoutedEventArgs e)
        {
            if (string.IsNullOrWhiteSpace(search_txt.Text))
            {
                MessageBox.Show("Enter ID to delete.");
                return;
            }

            try
            {
                SqlCommand cmd = new SqlCommand("DELETE FROM firsttable WHERE ID=@ID", con);
                cmd.Parameters.AddWithValue("@ID", search_txt.Text);

                con.Open();
                int result = cmd.ExecuteNonQuery();
                con.Close();

                if (result > 0)
                {
                    MessageBox.Show("Record deleted successfully.");
                    ClearInputs();
                    LoadGrid();
                }
                else
                {
                    MessageBox.Show("No record found with given ID.");
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show("Delete error: " + ex.Message);
            }
        }

        private void ClearDataBtn_Click(object sender, RoutedEventArgs e)
        {
            ClearInputs();
        }

        private void ClearInputs()
        {
            name_txt.Clear();
            age_txt.Clear();
            gender_txt.Clear();
            city_txt.Clear();
            search_txt.Clear();
        }
    }
}
